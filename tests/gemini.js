import { GoogleGenAI } from '@google/genai';
import { writeFileSync } from 'fs';

const ai = new GoogleGenAI({
  apiKey: 'AIzaSyA7D07k9YdO701vF9Cgihd0ZLRCltxqx7o', // ⚠️ Use .env in production
});

async function generateAndSave() {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.0-flash',
      contents: [
    // Context-setting message
    {
      role: "model",
      parts: [
        {
          text:
            //"take the context from gem1.js",
            "Generate an accurate and fully executable Playwright test script in TypeScript.Include meaningful inline comments to explain each step.The output should be code-only, with no extra explanation or description outside the code block.",
        },
      ],
    },
    // User's actual question
    {
      role: "user",
      parts: [
        {
          text:
            "navigate to google.com and click on I'm feeling lucky wait for 2 seconds" +
            "then navigate to thoughtworks.com and wait for 2 seconds" +
            "then again navigate to google.com",
        },
      ],
    },
  ],
      config: {
        tools: [{ codeExecution: {} }],
      },
    });

    const parts = response?.candidates?.[0]?.content?.parts || [];

    let output = '// *** This code is generated by AI Agent ***\n\n';

    parts.forEach((part) => {
      if (part.text) {
        // Split into lines, filter out lines containing ``` and join again
        const cleanedText = part.text
          .split('\n')
          .filter((line) => !line.includes('```'))
          .join('\n');
        output += `${cleanedText}\n`;
      }

      if (part.executableCode?.code) {
        output += `\n// Generated Code:\n${part.executableCode.code}\n`;
      }

      if (part.codeExecutionResult?.output) {
        output += `\n// Output:\n${part.codeExecutionResult.output}\n`;
      }
    });

    // Write to a .ts file
    writeFileSync('google.spec.ts', output);
    console.log('✅ Response written to google.spec.ts');
  } catch (error) {
    console.error('❌ Error generating content:', error);
  }
}

generateAndSave();
